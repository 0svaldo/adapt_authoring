var mongoose = require('mongoose');
var Schema =  mongoose.Schema;

var BlockSchema = new Schema({
  "_courseId" : {
    "type" : "ObjectId",
    "required": true
  },
  "_parentId" : {
    "type" : "ObjectId"
  },
  "_type" : {
    "type" : "String",
    "default" : "block"
  },
  "_classes" : {
    "type" : "String",
    "default" : ""
  },
  "_isDeleted": {
    "type": "Boolean",
    "default": false
  },
  "title" : {
    "type" : "String",
    "required" : false
  },
  "body" : {
    "type" : "String",
    "required" : false
  },
  "createdAt" : {
    "type" : "Date"
  },
  "createdBy" : {
    "type" : "ObjectId",
    "ref": "user"
  },
  "updatedAt" : {
    "type" : "Date"
  },
  "updatedBy" : {
    "type" : "ObjectId",
    "ref": "user"
  },
});

BlockSchema.pre('save', function (next) {
  if (!this.createdAt) {
    this.createdAt = new Date();
  }
  // if lastUpdated is for the course then it
  // should be updated whenever any sub-element is updated
  // but for now, make it just this object...
  if (this.isNew) {
    this.updatedAt = this.createdAt;
    this.updatedBy = this.createdBy;
  } else {
    this.updatedAt = new Date();
  }
  this.markModified('updatedAt');
  next();
});

BlockSchema.pre('remove', function (next) {
  console.log('removing Block -- TODO remove Component models')  
  
  next();
});
module.exports = BlockSchema;
